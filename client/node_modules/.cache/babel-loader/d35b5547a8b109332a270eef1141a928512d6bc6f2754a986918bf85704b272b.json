{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nconst API_URL = \"http://localhost:8800\";\n\n//Get all user\nexport const getUsers = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/`);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n    throw error;\n  }\n};\n\n//Delete Users\nexport const deleteUser = async id => {\n  try {\n    await axios.delete(`${API_URL}/${id}`);\n  } catch (error) {\n    toast.error(error);\n    throw error;\n  }\n};\n\n//Create Users\nexport const createUser = async userData => {\n  try {\n    const response = await axios.post(`${API_URL}/create-users`, userData);\n    const randomImage = await getRandomImage();\n    console.log(\"Link da imagem gerada:\", randomImage);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n    throw error;\n  }\n};\n\n//Update Users\nexport const updateUser = async (userData, id) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, userData);\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n    throw error;\n  }\n};\n\n// Get random image to users\nexport const getRandomImage = async () => {\n  try {\n    const response = await axios.get('https://source.unsplash.com/random/800x600?people');\n    return response.data; // A API Unsplash retorna a URL da imagem diretamente\n  } catch (error) {\n    toast.error(\"Erro ao buscar imagem aleatória.\");\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","toast","API_URL","getUsers","response","get","data","error","deleteUser","id","delete","createUser","userData","post","randomImage","getRandomImage","console","log","updateUser","put"],"sources":["C:/Dev/Crud Sync360.io/client/src/services/api.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nconst API_URL = \"http://localhost:8800\";\r\n\r\n//Get all user\r\nexport const getUsers = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/`);\r\n    return response.data;\r\n  } catch (error) {\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n//Delete Users\r\nexport const deleteUser = async (id) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/${id}`);\r\n  } catch (error) {\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n//Create Users\r\nexport const createUser = async (userData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/create-users`, userData);\r\n    const randomImage = await getRandomImage();\r\n    console.log(\"Link da imagem gerada:\", randomImage);\r\n    return response.data;\r\n  } catch (error) {\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n//Update Users\r\nexport const updateUser = async (userData, id) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/${id}`, userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    toast.error(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Get random image to users\r\nexport const getRandomImage = async () => {\r\n  try {\r\n    const response = await axios.get('https://source.unsplash.com/random/800x600?people');\r\n    return response.data; // A API Unsplash retorna a URL da imagem diretamente\r\n  } catch (error) {\r\n    toast.error(\"Erro ao buscar imagem aleatória.\");\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC,MAAMC,OAAO,GAAG,uBAAuB;;AAEvC;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,GAAEH,OAAQ,GAAE,CAAC;IAC/C,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,KAAK,CAACM,KAAK,CAACA,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;EACtC,IAAI;IACF,MAAMT,KAAK,CAACU,MAAM,CAAE,GAAER,OAAQ,IAAGO,EAAG,EAAC,CAAC;EACxC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdN,KAAK,CAACM,KAAK,CAACA,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMJ,KAAK,CAACa,IAAI,CAAE,GAAEX,OAAQ,eAAc,EAAEU,QAAQ,CAAC;IACtE,MAAME,WAAW,GAAG,MAAMC,cAAc,CAAC,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEH,WAAW,CAAC;IAClD,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,KAAK,CAACM,KAAK,CAACA,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMW,UAAU,GAAG,MAAAA,CAAON,QAAQ,EAAEH,EAAE,KAAK;EAChD,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACmB,GAAG,CAAE,GAAEjB,OAAQ,IAAGO,EAAG,EAAC,EAAEG,QAAQ,CAAC;IAC9D,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,KAAK,CAACM,KAAK,CAACA,KAAK,CAAC;IAClB,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAC,mDAAmD,CAAC;IACrF,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdN,KAAK,CAACM,KAAK,CAAC,kCAAkC,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}