{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { updateUser } from \"../services/api\";\nimport { useUsers } from \"./useUsers\";\nexport const useUpdateUser = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    refetchUsers,\n    users,\n    setUsers\n  } = useUsers();\n  const updateUserHandler = async (id, userData) => {\n    setIsLoading(true);\n    try {\n      await updateUser(userData, id);\n      refetchUsers();\n      const updatedUsers = users.map(user => user.id === id ? {\n        ...user,\n        ...userData\n      } : user);\n      setUsers(updatedUsers);\n      refetchUsers();\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    isLoading,\n    error,\n    updateUserHandler\n  };\n};\n_s(useUpdateUser, \"bjLdUSYhE5+qjwGyFgG+Hc0AesQ=\", false, function () {\n  return [useUsers];\n});","map":{"version":3,"names":["useState","updateUser","useUsers","useUpdateUser","_s","isLoading","setIsLoading","error","setError","refetchUsers","users","setUsers","updateUserHandler","id","userData","updatedUsers","map","user"],"sources":["C:/Dev/Crud Sync360.io/client/src/hook/useUpdateUsers.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { updateUser } from \"../services/api\";\r\nimport { useUsers } from \"./useUsers\";\r\n\r\nexport const useUpdateUser = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { refetchUsers, users, setUsers } = useUsers();\r\n\r\n  const updateUserHandler = async (id, userData) => {\r\n    setIsLoading(true);\r\n    try {\r\n      await updateUser(userData, id);\r\n      refetchUsers();\r\n      const updatedUsers = users.map(user =>\r\n        user.id === id ? { ...user, ...userData } : user\r\n      );\r\n      setUsers(updatedUsers);\r\n      refetchUsers();\r\n    } catch (error) {\r\n      setError(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return { isLoading, error, updateUserHandler };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,QAAQ,QAAQ,YAAY;AAErC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAES,YAAY;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAEpD,MAAMU,iBAAiB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,QAAQ,KAAK;IAChDR,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAML,UAAU,CAACa,QAAQ,EAAED,EAAE,CAAC;MAC9BJ,YAAY,CAAC,CAAC;MACd,MAAMM,YAAY,GAAGL,KAAK,CAACM,GAAG,CAACC,IAAI,IACjCA,IAAI,CAACJ,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGI,IAAI;QAAE,GAAGH;MAAS,CAAC,GAAGG,IAC9C,CAAC;MACDN,QAAQ,CAACI,YAAY,CAAC;MACtBN,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,SAAS;MACRD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAED,SAAS;IAAEE,KAAK;IAAEK;EAAkB,CAAC;AAChD,CAAC;AAACR,EAAA,CAvBWD,aAAa;EAAA,QAGkBD,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}