{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\Crud Sync360.io\\\\client\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport { Button, Container } from \"react-bootstrap\";\nimport { useContext, useState } from \"react\";\nimport { AppContext } from \"./AppContextProvider\";\nimport { FormsModal } from \"./FormsAdd.jsx\";\nimport { TableUsers } from \"./Tables.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HeaderComponent = () => {\n  _s();\n  const {\n    setShowModalForm,\n    showUserImage,\n    setShowUserImage\n  } = useContext(AppContext);\n  const [users, setUsers] = useState([]);\n  const openModalForm = async () => {\n    const imageUrl = await fetchRandomImage();\n    setShowUserImage(imageUrl);\n    setShowModalForm(true);\n  };\n  const fetchRandomImage = async () => {\n    const response = await fetch(\"https://source.unsplash.com/random/800x600?people\");\n    const imageUrl = response.url;\n    console.log(imageUrl);\n    return imageUrl;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex flex-column justify-content-center \",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: openModalForm,\n        children: \"Open Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormsModal, {\n        showUserImage: showUserImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableUsers, {\n        users: users,\n        setUsers: setUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(HeaderComponent, \"M/2P97KZehaJYqZkwAbbZynzrpY=\");\n_c = HeaderComponent;\nvar _c;\n$RefreshReg$(_c, \"HeaderComponent\");","map":{"version":3,"names":["Button","Container","useContext","useState","AppContext","FormsModal","TableUsers","jsxDEV","_jsxDEV","Fragment","_Fragment","HeaderComponent","_s","setShowModalForm","showUserImage","setShowUserImage","users","setUsers","openModalForm","imageUrl","fetchRandomImage","response","fetch","url","console","log","children","className","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Dev/Crud Sync360.io/client/src/components/Header.jsx"],"sourcesContent":["import { Button, Container } from \"react-bootstrap\";\r\nimport { useContext, useState } from \"react\";\r\nimport { AppContext } from \"./AppContextProvider\";\r\nimport { FormsModal } from \"./FormsAdd.jsx\";\r\nimport { TableUsers } from \"./Tables.jsx\";\r\n\r\nexport const HeaderComponent = () => {\r\n  const { setShowModalForm, showUserImage, setShowUserImage } =\r\n    useContext(AppContext);\r\n  const [users, setUsers] = useState([]);\r\n  const openModalForm = async () => {\r\n    const imageUrl = await fetchRandomImage();\r\n    setShowUserImage(imageUrl);\r\n    setShowModalForm(true);\r\n  };\r\n\r\n  const fetchRandomImage = async () => {\r\n    const response = await fetch(\r\n      \"https://source.unsplash.com/random/800x600?people\"\r\n    );\r\n    const imageUrl = response.url;\r\n    console.log(imageUrl);\r\n    return imageUrl;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"d-flex flex-column justify-content-center \">\r\n        <Button variant=\"primary\" onClick={openModalForm}>\r\n          Open Modal\r\n        </Button>\r\n        <FormsModal showUserImage={showUserImage} />\r\n        <TableUsers users={users} setUsers={setUsers} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,iBAAiB;AACnD,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM;IAAEC,gBAAgB;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GACzDb,UAAU,CAACE,UAAU,CAAC;EACxB,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,gBAAgB,CAAC,CAAC;IACzCL,gBAAgB,CAACI,QAAQ,CAAC;IAC1BN,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mDACF,CAAC;IACD,MAAMH,QAAQ,GAAGE,QAAQ,CAACE,GAAG;IAC7BC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IACrB,OAAOA,QAAQ;EACjB,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA,CAACP,SAAS;MAAC0B,SAAS,EAAC,4CAA4C;MAAAD,QAAA,gBAC/DlB,OAAA,CAACR,MAAM;QAAC4B,OAAO,EAAC,SAAS;QAACC,OAAO,EAAEX,aAAc;QAAAQ,QAAA,EAAC;MAElD;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzB,OAAA,CAACH,UAAU;QAACS,aAAa,EAAEA;MAAc;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5CzB,OAAA,CAACF,UAAU;QAACU,KAAK,EAAEA,KAAM;QAACC,QAAQ,EAAEA;MAAS;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC,gBACZ,CAAC;AAEP,CAAC;AAACrB,EAAA,CA9BWD,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}