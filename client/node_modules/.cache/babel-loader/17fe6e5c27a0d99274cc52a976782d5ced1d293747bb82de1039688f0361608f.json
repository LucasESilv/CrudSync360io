{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { deleteUser } from \"../services/api\";\nexport const useDeleteUsers = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const deleteUserById = async (id, onSuccess = () => {}) => {\n    setIsLoading(true);\n    try {\n      await deleteUser(id);\n      onSuccess();\n    } catch (error) {\n      setError(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    deleteUserById,\n    isLoading,\n    error\n  };\n};\n_s(useDeleteUsers, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");","map":{"version":3,"names":["useState","deleteUser","useDeleteUsers","_s","isLoading","setIsLoading","error","setError","deleteUserById","id","onSuccess"],"sources":["C:/Dev/Crud Sync360.io/client/src/hook/useDeleteUsers.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { deleteUser } from \"../services/api\";\r\n\r\nexport const useDeleteUsers = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const deleteUserById = async (id, onSuccess = () => {}) => {\r\n    setIsLoading(true);\r\n    try {\r\n      await deleteUser(id);\r\n      onSuccess();\r\n    } catch (error) {\r\n      setError(error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return { deleteUserById, isLoading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,cAAc,GAAG,MAAAA,CAAOC,EAAE,EAAEC,SAAS,GAAGA,CAAA,KAAM,CAAC,CAAC,KAAK;IACzDL,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMJ,UAAU,CAACQ,EAAE,CAAC;MACpBC,SAAS,CAAC,CAAC;IACb,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,SAAS;MACRD,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,OAAO;IAAEG,cAAc;IAAEJ,SAAS;IAAEE;EAAM,CAAC;AAC7C,CAAC;AAACH,EAAA,CAjBWD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}